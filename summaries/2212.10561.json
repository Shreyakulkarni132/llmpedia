{"Published": "2023-05-28", "Title": "Parsel: Algorithmic Reasoning with Language Models by Composing Decompositions", "Authors": "Eric Zelikman, Qian Huang, Gabriel Poesia, Noah D. Goodman, Nick Haber", "Summary": "Despite recent success in large language model (LLM) reasoning, LLMs struggle with hierarchical multi-step reasoning tasks like generating complex programs. For these tasks, humans often start with a high-level algorithmic design and implement each part gradually. We introduce Parsel, a framework enabling automatic implementation and validation of complex algorithms with code LLMs. With Parsel, we automatically decompose algorithmic tasks into hierarchical natural language function descriptions and then search over combinations of possible function implementations using tests. We show that Parsel can be used across domains requiring hierarchical reasoning, including program synthesis and robotic planning. We find that, using Parsel, LLMs solve more competition-level problems in the APPS dataset, resulting in pass rates over 75\\% higher than prior results from directly sampling AlphaCode and Codex, while often using a smaller sample budget. Moreover, with automatically generated tests, we find that Parsel can improve the state-of-the-art pass@1 performance on HumanEval from 67\\% to 85\\%. We also find that LLM-generated robotic plans using Parsel are more than twice as likely to be considered accurate than directly generated plans. Lastly, we explore how Parsel addresses LLM limitations and discuss how Parsel may be useful for human programmers. We release our code at https://github.com/ezelikman/parsel", "main_contribution": {"headline": "Parsel: A framework for decomposing and implementing complex algorithms with code LLMs", "description": "The paper introduces Parsel, a novel framework that enables the decomposition, implementation, and composition of complex programs from natural language using Large Language Models (LLMs). Parsel automatically decomposes algorithmic tasks into hierarchical natural language function descriptions and then searches over combinations of possible function implementations using tests. The framework is shown to be effective across domains requiring hierarchical reasoning, such as program synthesis and robotic planning. It significantly improves the performance of LLMs in solving competition-level problems and generating accurate robotic plans."}, "takeaways": {"headline": "Parsel enhances LLMs' ability to handle complex, hierarchical tasks", "description": "Parsel provides a structured approach to decompose complex tasks into manageable parts, similar to how human programmers work. This allows LLMs to handle more complex, hierarchical tasks, such as program synthesis and robotic planning, with improved accuracy and efficiency. The framework can be particularly useful for practitioners working on complex algorithmic tasks, as it can automate the decomposition and implementation process, saving time and resources.", "example": "For instance, given a complex task, Parsel can be used to decompose it into simpler sub-tasks described in natural language. Then, for each sub-task, Parsel can generate possible implementations and test them against constraints. The final solution is composed by combining the best implementations for each sub-task."}, "category": "USE CASES", "novelty_analysis": "Parsel presents a novel approach to leveraging LLMs for complex, hierarchical tasks. It introduces a new way of decomposing tasks and implementing solutions, significantly improving the performance of LLMs in such tasks.", "novelty_score": 3, "technical_analysis": "The paper is quite technical, detailing the workings of the Parsel framework and its application in various domains. It requires a good understanding of LLMs and algorithmic reasoning.", "technical_score": 3, "enjoyable_analysis": "The paper is well-structured and presents an interesting approach to leveraging LLMs for complex tasks. However, the technical nature of the content might make it a challenging read for those without a strong background in the field.", "enjoyable_score": 2}