{"Published": "2022-03-13", "Title": "PromptChainer: Chaining Large Language Model Prompts through Visual Programming", "Authors": "Tongshuang Wu, Ellen Jiang, Aaron Donsbach, Jeff Gray, Alejandra Molina, Michael Terry, Carrie J Cai", "Summary": "While LLMs can effectively help prototype single ML functionalities, many real-world applications involve complex tasks that cannot be easily handled via a single run of an LLM. Recent work has found that chaining multiple LLM runs together (with the output of one step being the input to the next) can help users accomplish these more complex tasks, and in a way that is perceived to be more transparent and controllable. However, it remains unknown what users need when authoring their own LLM chains -- a key step for lowering the barriers for non-AI-experts to prototype AI-infused applications. In this work, we explore the LLM chain authoring process. We conclude from pilot studies find that chaining requires careful scaffolding for transforming intermediate node outputs, as well as debugging the chain at multiple granularities; to help with these needs, we designed PromptChainer, an interactive interface for visually programming chains. Through case studies with four people, we show that PromptChainer supports building prototypes for a range of applications, and conclude with open questions on scaling chains to complex tasks, and supporting low-fi chain prototyping.", "main_contribution": {"headline": "PromptChainer: A Visual Programming Interface for Chaining LLM Prompts", "description": "The paper introduces PromptChainer, an interactive interface for visually programming chains of Large Language Models (LLMs). The authors identified that users need support in transforming data between steps of a chain and debugging the chain at multiple granularities. PromptChainer is designed to address these needs, enabling users to chain multiple LLM runs together, where the output of one step becomes the input to the next. This approach allows users to accomplish complex tasks that cannot be easily handled via a single run of an LLM, making the process more transparent and controllable."}, "takeaways": {"headline": "PromptChainer Enables Non-AI-Experts to Prototype AI-Infused Applications", "description": "PromptChainer provides a visual programming interface that allows users, including non-AI-experts, to chain together multiple LLM runs to accomplish complex tasks. This tool can be used to prototype AI-infused applications, making the process more accessible and controllable. For instance, a user could chain together several LLM runs to create a complex dialogue system, where the output of one dialogue turn becomes the input to the next, allowing for more nuanced and context-aware responses.", "example": "For example, using PromptChainer, a user could chain together LLM runs to create a complex dialogue system: 1. User input -> 2. LLM generates response -> 3. User responds to LLM's response -> 4. LLM generates next response based on previous dialogue turns. This chain can be visually programmed and debugged using PromptChainer."}, "category": "PROMPTING", "novelty_analysis": "The introduction of PromptChainer represents a novel approach to chaining LLM prompts. While the concept of chaining prompts is not new, the creation of a visual programming interface specifically designed to support this process is a unique contribution.", "novelty_score": 2, "technical_analysis": "The paper is somewhat technical, as it discusses the design and implementation of PromptChainer. However, it does not delve into complex mathematical theories or algorithms, making it accessible to a wider audience.", "technical_score": 2, "enjoyable_analysis": "The paper is well-written and presents an interesting approach to chaining LLM prompts. The introduction of PromptChainer and its potential applications make the paper engaging and insightful.", "enjoyable_score": 3}