{"Published": "2023-05-09", "Title": "StarCoder: may the source be with you!", "Authors": "Raymond Li, Loubna Ben Allal, Yangtian Zi, Niklas Muennighoff, Denis Kocetkov, Chenghao Mou, Marc Marone, Christopher Akiki, Jia Li, Jenny Chim, Qian Liu, Evgenii Zheltonozhskii, Terry Yue Zhuo, Thomas Wang, Olivier Dehaene, Mishig Davaadorj, Joel Lamy-Poirier, Jo\u00e3o Monteiro, Oleh Shliazhko, Nicolas Gontier, Nicholas Meade, Armel Zebaze, Ming-Ho Yee, Logesh Kumar Umapathi, Jian Zhu, Benjamin Lipkin, Muhtasham Oblokulov, Zhiruo Wang, Rudra Murthy, Jason Stillerman, Siva Sankalp Patel, Dmitry Abulkhanov, Marco Zocca, Manan Dey, Zhihan Zhang, Nour Fahmy, Urvashi Bhattacharyya, Wenhao Yu, Swayam Singh, Sasha Luccioni, Paulo Villegas, Maxim Kunakov, Fedor Zhdanov, Manuel Romero, Tony Lee, Nadav Timor, Jennifer Ding, Claire Schlesinger, Hailey Schoelkopf, Jan Ebert, Tri Dao, Mayank Mishra, Alex Gu, Jennifer Robinson, Carolyn Jane Anderson, Brendan Dolan-Gavitt, Danish Contractor, Siva Reddy, Daniel Fried, Dzmitry Bahdanau, Yacine Jernite, Carlos Mu\u00f1oz Ferrandis, Sean Hughes, Thomas Wolf, Arjun Guha, Leandro von Werra, Harm de Vries", "Summary": "The BigCode community, an open-scientific collaboration working on the responsible development of Large Language Models for Code (Code LLMs), introduces StarCoder and StarCoderBase: 15.5B parameter models with 8K context length, infilling capabilities and fast large-batch inference enabled by multi-query attention. StarCoderBase is trained on 1 trillion tokens sourced from The Stack, a large collection of permissively licensed GitHub repositories with inspection tools and an opt-out process. We fine-tuned StarCoderBase on 35B Python tokens, resulting in the creation of StarCoder. We perform the most comprehensive evaluation of Code LLMs to date and show that StarCoderBase outperforms every open Code LLM that supports multiple programming languages and matches or outperforms the OpenAI code-cushman-001 model. Furthermore, StarCoder outperforms every model that is fine-tuned on Python, can be prompted to achieve 40\\% pass@1 on HumanEval, and still retains its performance on other programming languages. We take several important steps towards a safe open-access model release, including an improved PII redaction pipeline and a novel attribution tracing tool, and make the StarCoder models publicly available under a more commercially viable version of the Open Responsible AI Model license.", "main_contribution": {"headline": "Introduction of StarCoder and StarCoderBase: Large Language Models for Code", "description": "The paper introduces StarCoder and StarCoderBase, two Large Language Models (LLMs) specifically designed for code. StarCoderBase, trained on 1 trillion tokens from The Stack, a large collection of permissively licensed GitHub repositories, is a 15.5B parameter model with 8K context length, infilling capabilities, and fast large-batch inference enabled by multi-query attention. StarCoder is a fine-tuned version of StarCoderBase on 35B Python tokens. The paper also introduces an improved PII redaction pipeline and a novel attribution tracing tool for safe open-access model release."}, "takeaways": {"headline": "StarCoder and StarCoderBase offer superior performance in code-related tasks", "description": "StarCoder and StarCoderBase represent a significant advancement in the field of Code LLMs. Their superior performance over other open Code LLMs that support multiple programming languages, and their ability to retain performance across different languages, make them valuable tools for developers and AI practitioners working on code-related tasks. The improved PII redaction pipeline and the novel attribution tracing tool also ensure safer usage of these models.", "example": "For instance, developers can use StarCoder or StarCoderBase to assist in coding tasks, such as code completion, bug detection, or even generating new code snippets. The models can be prompted to generate code in various programming languages, making them versatile tools for multi-language development environments."}, "category": "TRAINING", "novelty_analysis": "The introduction of StarCoder and StarCoderBase, specifically designed for code and trained on a large dataset from GitHub, is a significant contribution to the field of Code LLMs. The improved PII redaction pipeline and the novel attribution tracing tool also add novelty in terms of ensuring safer usage of these models.", "novelty_score": 3, "technical_analysis": "The paper is highly technical, discussing the training process of StarCoder and StarCoderBase, their performance evaluation, and the introduction of new tools for safe model release. It requires a good understanding of LLMs and their application in the field of coding.", "technical_score": 3, "enjoyable_analysis": "The paper is well-structured and provides a comprehensive evaluation of the introduced models. However, the high level of technical detail might make it a challenging read for those without a strong background in LLMs and coding.", "enjoyable_score": 2}