{"id": "http://arxiv.org/abs/2209.11302v1", "guidislink": true, "link": "http://arxiv.org/abs/2209.11302v1", "updated": "2022-09-22T20:29:49Z", "updated_parsed": [2022, 9, 22, 20, 29, 49, 3, 265, 0], "published": "2022-09-22T20:29:49Z", "published_parsed": [2022, 9, 22, 20, 29, 49, 3, 265, 0], "title": "ProgPrompt: Generating Situated Robot Task Plans using Large Language\n  Models", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=progprompt++generating+situated+robot+task+plans+using+large+language+models&id_list=&sortBy=relevance&sortOrder=descending&start=0&max_results=40", "value": "ProgPrompt: Generating Situated Robot Task Plans using Large Language\n  Models"}, "summary": "Task planning can require defining myriad domain knowledge about the world in\nwhich a robot needs to act. To ameliorate that effort, large language models\n(LLMs) can be used to score potential next actions during task planning, and\neven generate action sequences directly, given an instruction in natural\nlanguage with no additional domain information. However, such methods either\nrequire enumerating all possible next steps for scoring, or generate free-form\ntext that may contain actions not possible on a given robot in its current\ncontext. We present a programmatic LLM prompt structure that enables plan\ngeneration functional across situated environments, robot capabilities, and\ntasks. Our key insight is to prompt the LLM with program-like specifications of\nthe available actions and objects in an environment, as well as with example\nprograms that can be executed. We make concrete recommendations about prompt\nstructure and generation constraints through ablation experiments, demonstrate\nstate of the art success rates in VirtualHome household tasks, and deploy our\nmethod on a physical robot arm for tabletop tasks. Website at\nprogprompt.github.io", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=progprompt++generating+situated+robot+task+plans+using+large+language+models&id_list=&sortBy=relevance&sortOrder=descending&start=0&max_results=40", "value": "Task planning can require defining myriad domain knowledge about the world in\nwhich a robot needs to act. To ameliorate that effort, large language models\n(LLMs) can be used to score potential next actions during task planning, and\neven generate action sequences directly, given an instruction in natural\nlanguage with no additional domain information. However, such methods either\nrequire enumerating all possible next steps for scoring, or generate free-form\ntext that may contain actions not possible on a given robot in its current\ncontext. We present a programmatic LLM prompt structure that enables plan\ngeneration functional across situated environments, robot capabilities, and\ntasks. Our key insight is to prompt the LLM with program-like specifications of\nthe available actions and objects in an environment, as well as with example\nprograms that can be executed. We make concrete recommendations about prompt\nstructure and generation constraints through ablation experiments, demonstrate\nstate of the art success rates in VirtualHome household tasks, and deploy our\nmethod on a physical robot arm for tabletop tasks. Website at\nprogprompt.github.io"}, "authors": [{"name": "Ishika Singh"}, {"name": "Valts Blukis"}, {"name": "Arsalan Mousavian"}, {"name": "Ankit Goyal"}, {"name": "Danfei Xu"}, {"name": "Jonathan Tremblay"}, {"name": "Dieter Fox"}, {"name": "Jesse Thomason"}, {"name": "Animesh Garg"}], "author_detail": {"name": "Animesh Garg"}, "author": "Animesh Garg", "links": [{"href": "http://arxiv.org/abs/2209.11302v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/2209.11302v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.RO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.RO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.AI", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.CL", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.LG", "scheme": "http://arxiv.org/schemas/atom", "label": null}]}